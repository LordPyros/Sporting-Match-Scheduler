<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACWAP8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDL
        ooor/SQ/SAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        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
        2cwjGcqAmFIBUDAx6Frfw00TxH440XxJeWPna14dSZNPuPOkX7OJlCyfKGCtkAD5gcdsVvUVWFyfAYan
        7LDUIQjfmtGMUuZbSskldd9xRoU1e0VrvpvbXX5mFN8NNEuPiPB4uey3eILexbTI7vzpPlt2cOU2btnL
        AHJXPviuC+Jn7Cvwn+MHi+bXvEHg+1utWugPPnhu7i088jJ3OsMiKzHPLEFjxknAr1qilisly7Ew9nia
        EJxu5WlCLXM9XKzT1d3d7sc6cJpqSTvvdb2Vl+GnoU/D/h+x8KaJa6bplnb6fp9jGsNvbW8YjihQcBVU
        cACvOE+GuseFf2uH8VabZ/aPD/irQxY6w6yRqbS5t33W8pUkMwdHdPlDEEDOBzXqdFb4nA0686VSV06U
        uaNu/LKDW2zjKSfrpZhKlFw5Nlpt5NNflb0PM/jD+x38Nfj3rcep+KvCdnqWpRrt+1RzTWk0owAA7wuh
        kwAAN5O0dMZNdH8Jfgp4V+BXhv8AsnwlodnotiW3usILSTtz80kjEvIRnALsSBwOABXU0Vlh8nwFDESx
        dChCNSXxSUYqTvveSV382HsafP7TlXN3tr95z/gn4XaD8OrPVLfR9PW1h1q+m1K9RpXmE882PMc72bG7
        A+UYUdgK8t+L/wCzNGPhHo/w58F6O9l4V1bXYptZ/wBOZo9PsxJ58wRZZC2JGUKI4/lG8nAGTXuVFZYr
        JMHXoqg4KMUlHRJe4pRbp7aQlypSirXW1mk0qlGMouLW9/Vc17tdm779xsMSwRLGihUQBVUDgAdBTqKK
        9Y1WmiCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA//Z
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACWAP8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDx
        eiiivy8/04CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
        ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
        ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
        ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKp3/iLT9K1
        Kzs7q+s7a81JmW0glmVJLoqNzCNScsQOTjOBVyiz3JjUi24p6rfy66hRRRQUFFFFABRRRQAUUUUAFFFF
        ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAFTX9Yj8PaFe6hMGaGxge4cL1KopY4/Kvnr4Pfs3aP8AtL+C
        bfx18SlvfEereI913a2r308NrpFuWbZDCkbrgFcEk5ycHruLfQ+saXFrmkXVlMMw3kLwSD1VgVP6Gvn7
        4XfEXxR+y54Yj8E+IvAfjLxJbaMWTStW8O2Iv4r22LuV8xQy+U6jA2kkn0AALd2DcuWfs3aelujtrzWf
        f4b9bX6XPh+KqeFljcNLNYc+FUal04ucPae5yOcUmrcvtFFyXKpP+ZxPQ7u3m/Zt+GljpPhXQfEnjKR7
        prfT7I3Qb7KrbnVJJ5OIrdFXYrNux8gOSc1B8LPj5q/if4gS+FfFng+48G641l/aNnEdRi1CK7gDbHIk
        jACsGI+U545478P8e9S8WfFb4W+HdSuvB/i2z8PPqrNrmgafcf8AE2vtPIKx7o0Kt82RvhB3LnBPBYc7
        +zh8MrTQf2mbDWfDfw38UeB/DE2i3MJk1bzTLPMJI870d3MPooZhvAJA611U6MZwnKvrL3tb63Sur+8t
        35Sb123Xz+IzzFUMzw2Gyvmjh70koOLUXCbSbUXRcrRT3dWmotJcstn20X7WniPxNrXiLTfCvw01LxFe
        eGdTnsbtxqkVra+XGcKyyyL80jHJ8pVJAwdxzium0/8Aan0G6+AMPxAkt9RSzlIh+wJFvuzcmTyvs6rx
        ubzOB0yOeO1X9lzw7qHh8/ED7fY3lj9t8X31zb/aIWj8+Jtm2RNwG5Tg4YcHFeZ6Z8IvFGo/sm28NnpN
        2uu6D4pl1yLTbpDbvfJFdu4TDj+JTlcjBwPWs/Z0HaD0+C7v0a97fTrfbSxtHMs9o0XiVOVWU4YhqDhG
        0ZU5JU7csVJtrdOT5vs2Z6p8OPjP4w1zxAtr4t+HF74PsZrWS5i1D+1Yb+FNgBKy7FHlfKcjd1IIxwcc
        5e/tbeIm0uXxJp/wz1i/8Aw5lOtf2lBFcSWynDzpZkeYy8FlyRuXB+UHjY8MfGfUPjq154fXwH428N2t
        5p06Xeoa5Y/Y4rdmTaqxgkmUksem0gDOOePnrwr8D/CfhDQ49B8UfAnx5rPi6zH2eS902W5k0vUJP4JP
        tCzKkatkbiFwnOeQQNKNCm5y9pBJpKyTvdXd38Selkt+t7a6cObZ5mVOhRWXYuU4Sc71ZxUHzJQ5Ye7h
        pxad5PSnFuzippxafuXxd1m38RfHr4H6hZyedZ301/cQSAY3o9mGU/iCDXtleL+N/Al1Y/FP4Jppui3l
        vpmgm7jnSIPcR6Yn2MIiSS88ZG0Mx+YjvXtFceK5VTgobLm/9Ll2PtuHVWeJxc66tKUqbdk0r+xp3tdJ
        2vdaq/fUKKKK4z6oKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/Z
</value>
  </data>
</root>